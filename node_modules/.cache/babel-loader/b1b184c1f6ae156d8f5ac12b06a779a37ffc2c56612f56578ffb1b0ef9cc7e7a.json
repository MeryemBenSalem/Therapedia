{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youss\\\\Downloads\\\\Therapedia\\\\Therapedia\\\\src\\\\components\\\\QuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = ({\n  onAddQuestion\n}) => {\n  _s();\n  const [content, setContent] = useState('');\n  const [userId, setUserId] = useState(''); // Assuming you have a way to get the user ID\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const questionData = {\n      content: content,\n      upvotes: 0,\n      downvotes: 0,\n      userId: userId,\n      date: new Date().toISOString()\n      // Add more fields here as needed\n    };\n    onAddQuestion(questionData);\n    setContent(''); // Clear the content field after submitting\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"content\",\n      children: \"Question Content:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      id: \"content\",\n      value: content,\n      onChange: e => setContent(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionForm, \"Cxp4whZQnNTYChtCGYdEpM5+nJQ=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionForm","onAddQuestion","_s","content","setContent","userId","setUserId","handleSubmit","e","preventDefault","questionData","upvotes","downvotes","date","Date","toISOString","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","value","onChange","target","required","type","_c","$RefreshReg$"],"sources":["C:/Users/youss/Downloads/Therapedia/Therapedia/src/components/QuestionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst QuestionForm = ({ onAddQuestion }) => {\r\n    const [content, setContent] = useState('');\r\n    const [userId, setUserId] = useState(''); // Assuming you have a way to get the user ID\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const questionData = {\r\n            content: content,\r\n            upvotes: 0,\r\n            downvotes: 0,\r\n            userId: userId,\r\n            date: new Date().toISOString(),\r\n            // Add more fields here as needed\r\n        };\r\n        onAddQuestion(questionData);\r\n        setContent(''); // Clear the content field after submitting\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label htmlFor=\"content\">Question Content:</label>\r\n            <textarea\r\n                id=\"content\"\r\n                value={content}\r\n                onChange={(e) => setContent(e.target.value)}\r\n                required\r\n            ></textarea>\r\n            {/* Add more input fields for additional question fields */}\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default QuestionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMU,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,YAAY,GAAG;MACjBP,OAAO,EAAEA,OAAO;MAChBQ,OAAO,EAAE,CAAC;MACVC,SAAS,EAAE,CAAC;MACZP,MAAM,EAAEA,MAAM;MACdQ,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;MAC7B;IACJ,CAAC;IACDd,aAAa,CAACS,YAAY,CAAC;IAC3BN,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EACpB,CAAC;EAED,oBACIL,OAAA;IAAMiB,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBACzBlB,OAAA;MAAOmB,OAAO,EAAC,SAAS;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAClDvB,OAAA;MACIwB,EAAE,EAAC,SAAS;MACZC,KAAK,EAAErB,OAAQ;MACfsB,QAAQ,EAAGjB,CAAC,IAAKJ,UAAU,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;MAC5CG,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAEZvB,OAAA;MAAQ6B,IAAI,EAAC,QAAQ;MAAAX,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEf,CAAC;AAACpB,EAAA,CA/BIF,YAAY;AAAA6B,EAAA,GAAZ7B,YAAY;AAiClB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}