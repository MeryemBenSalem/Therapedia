{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youss\\\\Downloads\\\\Therapedia\\\\Therapedia\\\\src\\\\components\\\\Question.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Comment from './Comment';\nimport './Question.css';\nimport AddBoxRoundedIcon from '@mui/icons-material/AddBoxRounded';\nimport { Button } from '@mui/material';\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\nimport ArrowDownwardRoundedIcon from '@mui/icons-material/ArrowDownwardRounded';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Question = ({\n  question,\n  onVote\n}) => {\n  _s();\n  const [comments, setComments] = useState([]);\n  const [voted, setVoted] = useState(null);\n  const [newComment, setNewComment] = useState('');\n  const [upvotes, setUpvotes] = useState(question.upvotes);\n  const [downvotes, setDownvotes] = useState(question.downvotes);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Fetch comments belonging to the question\n    fetchComments(question.id);\n    // Fetch user information\n    fetchUser(question.userId);\n  }, [question.id, question.userId]);\n  const fetchComments = async questionId => {\n    try {\n      const response = await fetch(`http://localhost:8080/Comments/question/${questionId}`);\n      if (response.ok) {\n        const data = await response.json();\n        // Sort the comments based on the difference between upvotes and downvotes\n        const sortedComments = data.sort((a, b) => b.upvotes - b.downvotes - (a.upvotes - a.downvotes));\n        setComments(sortedComments);\n      } else {\n        console.error('Failed to fetch comments');\n      }\n    } catch (error) {\n      console.error('Error fetching comments:', error);\n    }\n  };\n  const fetchUser = async userId => {\n    try {\n      const response = await fetch(`http://localhost:8080/Users/${userId}`);\n      if (response.ok) {\n        const userData = await response.json();\n        setUser(userData);\n      } else {\n        console.error('Failed to fetch user');\n      }\n    } catch (error) {\n      console.error('Error fetching user:', error);\n    }\n  };\n  const formatDate = dateString => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(dateString).toLocaleDateString(undefined, options);\n  };\n  const handleAddComment = async () => {\n    // Code for adding a comment...\n  };\n  const handleUpvote = async () => {\n    // Code for handling upvote...\n  };\n  const handleDownvote = async () => {\n    // Code for handling downvote...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"questions-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"http://i9.photobucket.com/albums/a88/creaticode/avatar_1_zps8e1c80cd.jpg\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-head\",\n          children: [user && /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"question-name by-author\",\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 34\n          }, this), question.date && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"question-date\",\n            children: [\"Posted on \", formatDate(question.date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 43\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowDownwardRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 66\n            }, this),\n            onClick: handleDownvote,\n            disabled: voted !== null,\n            children: downvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            startIcon: /*#__PURE__*/_jsxDEV(ArrowUpwardRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 66\n            }, this),\n            onClick: handleUpvote,\n            disabled: voted !== null,\n            children: upvotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-content\",\n          children: question.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comment-box1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newComment,\n            onChange: e => setNewComment(e.target.value),\n            className: \"comment-input\",\n            placeholder: \"Add a comment...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            startIcon: /*#__PURE__*/_jsxDEV(AddBoxRoundedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 44\n            }, this),\n            onClick: handleAddComment,\n            className: \"comment-button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"comment-container\",\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        comment: comment\n      }, comment.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Question, \"9oGR+AIqVMt7hQ4v3EhgMTLV3Sg=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","Comment","AddBoxRoundedIcon","Button","ArrowUpwardRoundedIcon","ArrowDownwardRoundedIcon","jsxDEV","_jsxDEV","Question","question","onVote","_s","comments","setComments","voted","setVoted","newComment","setNewComment","upvotes","setUpvotes","downvotes","setDownvotes","user","setUser","fetchComments","id","fetchUser","userId","questionId","response","fetch","ok","data","json","sortedComments","sort","a","b","console","error","userData","formatDate","dateString","options","year","month","day","Date","toLocaleDateString","undefined","handleAddComment","handleUpvote","handleDownvote","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","username","date","variant","startIcon","onClick","disabled","content","type","value","onChange","e","target","placeholder","map","comment","_c","$RefreshReg$"],"sources":["C:/Users/youss/Downloads/Therapedia/Therapedia/src/components/Question.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Comment from './Comment';\r\nimport './Question.css';\r\nimport AddBoxRoundedIcon from '@mui/icons-material/AddBoxRounded';\r\nimport { Button } from '@mui/material';\r\nimport ArrowUpwardRoundedIcon from '@mui/icons-material/ArrowUpwardRounded';\r\nimport ArrowDownwardRoundedIcon from '@mui/icons-material/ArrowDownwardRounded';\r\n\r\nconst Question = ({ question, onVote }) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [voted, setVoted] = useState(null);\r\n    const [newComment, setNewComment] = useState('');\r\n    const [upvotes, setUpvotes] = useState(question.upvotes);\r\n    const [downvotes, setDownvotes] = useState(question.downvotes);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch comments belonging to the question\r\n        fetchComments(question.id);\r\n        // Fetch user information\r\n        fetchUser(question.userId);\r\n    }, [question.id, question.userId]);\r\n\r\n    const fetchComments = async (questionId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/Comments/question/${questionId}`);\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                // Sort the comments based on the difference between upvotes and downvotes\r\n                const sortedComments = data.sort((a, b) => (b.upvotes - b.downvotes) - (a.upvotes - a.downvotes));\r\n                setComments(sortedComments);\r\n            } else {\r\n                console.error('Failed to fetch comments');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching comments:', error);\r\n        }\r\n    };\r\n\r\n    const fetchUser = async (userId) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8080/Users/${userId}`);\r\n            if (response.ok) {\r\n                const userData = await response.json();\r\n                setUser(userData);\r\n            } else {\r\n                console.error('Failed to fetch user');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error fetching user:', error);\r\n        }\r\n    };\r\n\r\n    const formatDate = (dateString) => {\r\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\r\n        return new Date(dateString).toLocaleDateString(undefined, options);\r\n    };\r\n\r\n    const handleAddComment = async () => {\r\n        // Code for adding a comment...\r\n    };\r\n\r\n    const handleUpvote = async () => {\r\n        // Code for handling upvote...\r\n    };\r\n\r\n    const handleDownvote = async () => {\r\n        // Code for handling downvote...\r\n    };\r\n\r\n    return (\r\n        <div className=\"questions-list\">\r\n            <li>\r\n                <div className=\"question-avatar\"><img src=\"http://i9.photobucket.com/albums/a88/creaticode/avatar_1_zps8e1c80cd.jpg\" alt=\"\"/></div>\r\n                <div className=\"question-box\">\r\n                    <div className=\"question-head\">\r\n                        {user && <h6 className=\"question-name by-author\">{user.username}</h6>}\r\n                        {question.date && <span className=\"question-date\">Posted on {formatDate(question.date)}</span>}\r\n                        <Button variant={\"contained\"} startIcon={<ArrowDownwardRoundedIcon/>} onClick={handleDownvote} disabled={voted !== null}>{downvotes}</Button>\r\n                        <Button variant={\"contained\"} startIcon={<ArrowUpwardRoundedIcon/>} onClick={handleUpvote} disabled={voted !== null}>{upvotes}</Button>\r\n                    </div>\r\n                    <div className=\"question-content\">{question.content}</div>\r\n                    <div className=\"comment-box1\">\r\n                        <input\r\n                            type=\"text\"\r\n                            value={newComment}\r\n                            onChange={(e) => setNewComment(e.target.value)}\r\n                            className=\"comment-input\"\r\n                            placeholder=\"Add a comment...\"\r\n                        />\r\n                        <Button startIcon={<AddBoxRoundedIcon/>} onClick={handleAddComment} className=\"comment-button\"></Button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <div className=\"comment-container\">\r\n                {comments.map((comment) => (\r\n                    <Comment key={comment.id} comment={comment}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Question;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}