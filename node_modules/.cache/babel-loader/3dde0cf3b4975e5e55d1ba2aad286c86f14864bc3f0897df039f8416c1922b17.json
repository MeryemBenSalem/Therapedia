{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youss\\\\Downloads\\\\Therapedia\\\\Therapedia\\\\src\\\\components\\\\ForumPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport QuestionForm from './QuestionForm';\nimport './ForumPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForumPage = () => {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false); // State to control the visibility of the modal\n\n  const handleAddQuestion = newQuestion => {\n    setQuestions([...questions, newQuestion]);\n    closeModal(); // Close the modal after adding a question\n  };\n  const openModal = () => {\n    setIsModalOpen(true);\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  const calculateTotalScore = question => {\n    return question.upvotes - question.downvotes;\n  };\n  const sortedQuestions = questions.slice().sort((a, b) => {\n    return calculateTotalScore(b) - calculateTotalScore(a);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to our Forum Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      children: \"Ask a Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close\",\n          onClick: closeModal,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(QuestionForm, {\n          onAddQuestion: handleAddQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-list\",\n      children: sortedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(Question, {\n        question: question\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(ForumPage, \"exhmKe67zOVrel0PqER8alQDEfw=\");\n_c = ForumPage;\nexport default ForumPage;\nvar _c;\n$RefreshReg$(_c, \"ForumPage\");","map":{"version":3,"names":["React","useState","Question","QuestionForm","jsxDEV","_jsxDEV","ForumPage","_s","questions","setQuestions","isModalOpen","setIsModalOpen","handleAddQuestion","newQuestion","closeModal","openModal","calculateTotalScore","question","upvotes","downvotes","sortedQuestions","slice","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onAddQuestion","map","index","_c","$RefreshReg$"],"sources":["C:/Users/youss/Downloads/Therapedia/Therapedia/src/components/ForumPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport QuestionForm from './QuestionForm';\r\nimport './ForumPage.css';\r\n\r\nconst ForumPage = () => {\r\n    const [questions, setQuestions] = useState([]);\r\n    const [isModalOpen, setIsModalOpen] = useState(false); // State to control the visibility of the modal\r\n\r\n    const handleAddQuestion = (newQuestion) => {\r\n        setQuestions([...questions, newQuestion]);\r\n        closeModal(); // Close the modal after adding a question\r\n    };\r\n\r\n    const openModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const closeModal = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const calculateTotalScore = (question) => {\r\n        return question.upvotes - question.downvotes;\r\n    };\r\n\r\n    const sortedQuestions = questions.slice().sort((a, b) => {\r\n        return calculateTotalScore(b) - calculateTotalScore(a);\r\n    });\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h1>Welcome to our Forum Page</h1>\r\n            <button onClick={openModal}>Ask a Question</button>\r\n            {/* Render the QuestionForm inside the modal */}\r\n            {isModalOpen && (\r\n                <div className=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <span className=\"close\" onClick={closeModal}>&times;</span>\r\n                        <QuestionForm onAddQuestion={handleAddQuestion} />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            <div className=\"question-list\">\r\n                {sortedQuestions.map((question, index) => (\r\n                    <Question key={index} question={question} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ForumPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}