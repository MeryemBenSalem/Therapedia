{"ast":null,"code":"const addQuestion = async questionData => {\n  try {\n    const response = await fetch('http://localhost:8080/Question', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        ...questionData,\n        date: new Date().toISOString(),\n        // Add the current date\n        userId: 2 // Provide the actual user ID\n      })\n    });\n    if (!response.ok) {\n      throw new Error('Failed to add question');\n    }\n    fetchQuestions(); // Refresh the list of questions after adding a new one\n  } catch (error) {\n    console.error('Error adding question:', error);\n  }\n};","map":{"version":3,"names":["addQuestion","questionData","response","fetch","method","headers","body","JSON","stringify","date","Date","toISOString","userId","ok","Error","fetchQuestions","error","console"],"sources":["C:/Users/youss/Downloads/Therapedia/Therapedia/src/components/QuestionForm.js"],"sourcesContent":["const addQuestion = async (questionData) => {\r\n    try {\r\n        const response = await fetch('http://localhost:8080/Question', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                ...questionData,\r\n                date: new Date().toISOString(), // Add the current date\r\n                userId: 2, // Provide the actual user ID\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Failed to add question');\r\n        }\r\n        fetchQuestions(); // Refresh the list of questions after adding a new one\r\n    } catch (error) {\r\n        console.error('Error adding question:', error);\r\n    }\r\n};\r\n"],"mappings":"AAAA,MAAMA,WAAW,GAAG,MAAOC,YAAY,IAAK;EACxC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,GAAGP,YAAY;QACfQ,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QAAE;QAChCC,MAAM,EAAE,CAAC,CAAE;MACf,CAAC;IACL,CAAC,CAAC;IACF,IAAI,CAACV,QAAQ,CAACW,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;IAC7C;IACAC,cAAc,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;EAClD;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}