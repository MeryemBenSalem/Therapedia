{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\youss\\\\Downloads\\\\Therapedia\\\\Therapedia\\\\src\\\\components\\\\QuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './QuestionForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionForm = () => {\n  _s();\n  const [newQuestion, setNewQuestion] = useState('');\n  const handleInputChange = event => {\n    setNewQuestion(event.target.value);\n  };\n  const handleSubmit = () => {\n    if (newQuestion.trim() !== '') {\n      const questionData = {\n        content: newQuestion,\n        upvotes: 0,\n        downvotes: 0\n        // Add any other fields you want to include in the question object\n      };\n      fetch('/api/question/addQuestion', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(questionData)\n      }).then(response => {\n        if (response.ok) {\n          console.log('Question submitted successfully');\n          setNewQuestion('');\n        } else {\n          console.error('Failed to submit question');\n        }\n      }).catch(error => {\n        console.error('Error:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newQuestion,\n      onChange: handleInputChange,\n      placeholder: \"Express yourself...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(QuestionForm, \"B1CCmHJqyQw2skR1+Ter8ZaNs1w=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionForm","_s","newQuestion","setNewQuestion","handleInputChange","event","target","value","handleSubmit","trim","questionData","content","upvotes","downvotes","fetch","method","headers","body","JSON","stringify","then","response","ok","console","log","error","catch","className","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/youss/Downloads/Therapedia/Therapedia/src/components/QuestionForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './QuestionForm.css';\r\n\r\nconst QuestionForm = () => {\r\n    const [newQuestion, setNewQuestion] = useState('');\r\n\r\n    const handleInputChange = (event) => {\r\n        setNewQuestion(event.target.value);\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (newQuestion.trim() !== '') {\r\n            const questionData = {\r\n\r\n                content: newQuestion,\r\n                upvotes: 0,\r\n                downvotes: 0,\r\n                // Add any other fields you want to include in the question object\r\n            };\r\n\r\n            fetch('/api/question/addQuestion', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify(questionData),\r\n            })\r\n                .then(response => {\r\n                    if (response.ok) {\r\n                        console.log('Question submitted successfully');\r\n                        setNewQuestion('');\r\n                    } else {\r\n                        console.error('Failed to submit question');\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    console.error('Error:', error);\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"question-form\">\r\n            <input\r\n                type=\"text\"\r\n                value={newQuestion}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Express yourself...\"\r\n            />\r\n            <button onClick={handleSubmit}>Submit</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default QuestionForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMO,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,cAAc,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIN,WAAW,CAACO,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC3B,MAAMC,YAAY,GAAG;QAEjBC,OAAO,EAAET,WAAW;QACpBU,OAAO,EAAE,CAAC;QACVC,SAAS,EAAE;QACX;MACJ,CAAC;MAEDC,KAAK,CAAC,2BAA2B,EAAE;QAC/BC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,YAAY;MACrC,CAAC,CAAC,CACGU,IAAI,CAACC,QAAQ,IAAI;QACd,IAAIA,QAAQ,CAACC,EAAE,EAAE;UACbC,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;UAC9CrB,cAAc,CAAC,EAAE,CAAC;QACtB,CAAC,MAAM;UACHoB,OAAO,CAACE,KAAK,CAAC,2BAA2B,CAAC;QAC9C;MACJ,CAAC,CAAC,CACDC,KAAK,CAACD,KAAK,IAAI;QACZF,OAAO,CAACE,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC,CAAC,CAAC;IACV;EACJ,CAAC;EAED,oBACI1B,OAAA;IAAK4B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1B7B,OAAA;MACI8B,IAAI,EAAC,MAAM;MACXtB,KAAK,EAAEL,WAAY;MACnB4B,QAAQ,EAAE1B,iBAAkB;MAC5B2B,WAAW,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACFpC,OAAA;MAAQqC,OAAO,EAAE5B,YAAa;MAAAoB,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd,CAAC;AAAClC,EAAA,CAjDID,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAmDlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}